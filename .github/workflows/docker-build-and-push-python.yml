name: Build and Push Docker Image for Python

on:
  push:
    branches:
      - main
    paths:
      - '/python/**'
  pull_request:
    paths:
      - '/python/Dockerfile'

jobs:
  build:
    if: github.repository == 'matrixinfer-ai/matrixinfer'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ downloader, runtime ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # arm64 builds are slow on PRs, so only build amd64 for PRs
      - name: Set platforms
        id: platforms
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          else
            echo "platforms=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT
          fi

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # image name will be ghcr.io/matrixinfer-ai/downloader and ghcr.io/matrixinfer-ai/runtime
          images: ghcr.io/${{ github.repository_owner }}/${{matrix.service}}
          # tags based on git refs and semver, push to default branch will also get "latest" tag
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./python
          target: ${{ matrix.service }}
          platforms: ${{ steps.platforms.outputs.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true
