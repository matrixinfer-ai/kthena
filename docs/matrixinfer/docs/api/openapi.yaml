openapi: 3.0.3
info:
  title: MatrixInfer API
  description: |
    MatrixInfer is a Kubernetes-native platform for deploying and managing AI model inference workloads.
    
    This API documentation covers the custom resources and their specifications for:
    - Model registry and management
    - Inference workload deployment
    - Network routing and traffic management
    - Autoscaling policies
    
    For more information, visit the [MatrixInfer documentation](../overview).
  version: v1alpha1
  contact:
    name: MatrixInfer Team
    url: https://github.com/matrixinfer-ai/matrixinfer
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: https://api.matrixinfer.ai/v1alpha1
    description: MatrixInfer API Server

paths:
  /models:
    get:
      summary: List Models
      description: Retrieve a list of registered models
      operationId: listModels
      parameters:
        - name: namespace
          in: query
          description: Kubernetes namespace
          schema:
            type: string
        - name: labelSelector
          in: query
          description: Label selector for filtering
          schema:
            type: string
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelList'
    post:
      summary: Create Model
      description: Register a new model
      operationId: createModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
      responses:
        '201':
          description: Model created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '400':
          description: Invalid model specification
        '409':
          description: Model already exists

  /models/{name}:
    get:
      summary: Get Model
      description: Retrieve a specific model by name
      operationId: getModel
      parameters:
        - name: name
          in: path
          required: true
          description: Model name
          schema:
            type: string
        - name: namespace
          in: query
          description: Kubernetes namespace
          schema:
            type: string
      responses:
        '200':
          description: Model details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '404':
          description: Model not found
    put:
      summary: Update Model
      description: Update an existing model
      operationId: updateModel
      parameters:
        - name: name
          in: path
          required: true
          description: Model name
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
      responses:
        '200':
          description: Model updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
        '404':
          description: Model not found
    delete:
      summary: Delete Model
      description: Delete a model
      operationId: deleteModel
      parameters:
        - name: name
          in: path
          required: true
          description: Model name
          schema:
            type: string
      responses:
        '204':
          description: Model deleted successfully
        '404':
          description: Model not found

  /modelinfers:
    get:
      summary: List ModelInfers
      description: Retrieve a list of model inference deployments
      operationId: listModelInfers
      responses:
        '200':
          description: List of model infers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInferList'
    post:
      summary: Create ModelInfer
      description: Create a new model inference deployment
      operationId: createModelInfer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelInfer'
      responses:
        '201':
          description: ModelInfer created successfully

  /modelservers:
    get:
      summary: List ModelServers
      description: Retrieve a list of model servers
      operationId: listModelServers
      responses:
        '200':
          description: List of model servers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelServerList'
    post:
      summary: Create ModelServer
      description: Create a new model server
      operationId: createModelServer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelServer'
      responses:
        '201':
          description: ModelServer created successfully

components:
  schemas:
    Model:
      type: object
      required:
        - apiVersion
        - kind
        - metadata
        - spec
      properties:
        apiVersion:
          type: string
          enum: [registry.matrixinfer.ai/v1alpha1]
        kind:
          type: string
          enum: [Model]
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/ModelSpec'
        status:
          $ref: '#/components/schemas/ModelStatus'

    ModelSpec:
      type: object
      required:
        - modelSpec
        - runtime
      properties:
        modelSpec:
          type: object
          required:
            - modelId
            - framework
            - version
            - source
          properties:
            modelId:
              type: string
              description: Unique identifier for the model
            framework:
              type: string
              description: ML framework (pytorch, tensorflow, onnx, etc.)
              enum: [pytorch, tensorflow, onnx, huggingface, custom]
            version:
              type: string
              description: Model version
            source:
              type: object
              required:
                - uri
              properties:
                uri:
                  type: string
                  description: URI to model artifacts
        runtime:
          type: object
          required:
            - image
          properties:
            image:
              type: string
              description: Container image for model runtime
            resources:
              $ref: '#/components/schemas/ResourceRequirements'

    ModelInfer:
      type: object
      required:
        - apiVersion
        - kind
        - metadata
        - spec
      properties:
        apiVersion:
          type: string
          enum: [workload.matrixinfer.ai/v1alpha1]
        kind:
          type: string
          enum: [ModelInfer]
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/ModelInferSpec'
        status:
          $ref: '#/components/schemas/ModelInferStatus'

    ModelInferSpec:
      type: object
      required:
        - modelRef
      properties:
        modelRef:
          $ref: '#/components/schemas/ObjectReference'
        replicas:
          type: integer
          minimum: 0
          default: 1
        autoscaling:
          type: object
          properties:
            enabled:
              type: boolean
              default: false
            minReplicas:
              type: integer
              minimum: 1
            maxReplicas:
              type: integer
              minimum: 1
            targetCPUUtilizationPercentage:
              type: integer
              minimum: 1
              maximum: 100
        resources:
          $ref: '#/components/schemas/ResourceRequirements'

    ModelServer:
      type: object
      required:
        - apiVersion
        - kind
        - metadata
        - spec
      properties:
        apiVersion:
          type: string
          enum: [networking.matrixinfer.ai/v1alpha1]
        kind:
          type: string
          enum: [ModelServer]
        metadata:
          $ref: '#/components/schemas/ObjectMeta'
        spec:
          $ref: '#/components/schemas/ModelServerSpec'
        status:
          $ref: '#/components/schemas/ModelServerStatus'

    ModelServerSpec:
      type: object
      required:
        - modelInferRef
        - service
        - routing
      properties:
        modelInferRef:
          $ref: '#/components/schemas/ObjectReference'
        service:
          type: object
          required:
            - port
          properties:
            type:
              type: string
              enum: [ClusterIP, NodePort, LoadBalancer]
              default: ClusterIP
            port:
              type: integer
              minimum: 1
              maximum: 65535
            targetPort:
              type: integer
              minimum: 1
              maximum: 65535
        routing:
          type: object
          required:
            - path
          properties:
            path:
              type: string
              description: URL path for the model endpoint
            timeout:
              type: string
              description: Request timeout duration
            retries:
              type: integer
              minimum: 0
        rateLimit:
          type: object
          properties:
            enabled:
              type: boolean
              default: false
            requestsPerSecond:
              type: integer
              minimum: 1
            burstSize:
              type: integer
              minimum: 1

    ObjectMeta:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        namespace:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        annotations:
          type: object
          additionalProperties:
            type: string

    ObjectReference:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        namespace:
          type: string

    ResourceRequirements:
      type: object
      properties:
        requests:
          type: object
          additionalProperties:
            type: string
        limits:
          type: object
          additionalProperties:
            type: string

    ModelStatus:
      type: object
      properties:
        phase:
          type: string
          enum: [Pending, Ready, Failed]
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'

    ModelInferStatus:
      type: object
      properties:
        phase:
          type: string
          enum: [Pending, Running, Failed]
        replicas:
          type: integer
        readyReplicas:
          type: integer
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'

    ModelServerStatus:
      type: object
      properties:
        phase:
          type: string
          enum: [Pending, Ready, Failed]
        serviceEndpoint:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/Condition'

    Condition:
      type: object
      required:
        - type
        - status
      properties:
        type:
          type: string
        status:
          type: string
          enum: [True, False, Unknown]
        reason:
          type: string
        message:
          type: string
        lastTransitionTime:
          type: string
          format: date-time

    ModelList:
      type: object
      required:
        - apiVersion
        - kind
        - items
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Model'

    ModelInferList:
      type: object
      required:
        - apiVersion
        - kind
        - items
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ModelInfer'

    ModelServerList:
      type: object
      required:
        - apiVersion
        - kind
        - items
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ModelServer'