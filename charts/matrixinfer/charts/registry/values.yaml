modelController:
  # replicas is the number of model-controller instances to run.
  replicas: 3
  image:
    # repository is the container image repository for the model-controller.
    repository: ghcr.io/matrixinfer-ai/model-controller
    # tag is the container image tag for the model-controller.
    tag: latest
    # pullPolicy is the image pull policy for the model-controller.
    pullPolicy: IfNotPresent
    # args are the command line arguments for the model-controller.
    # Must set --leader-elect to true if replicas are greater than or equal to 2. Default is false.
    args: [ "--leader-elect=true" ]
  # resource defines the resource limits and requests for the model-controller.
  resource:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  # downloaderImage is the container image used for downloading models.
  downloaderImage:
    repository: matrixinfer/downloader
    tag: 1.0.0
  # runtimeImage is the container image used for running models.
  runtimeImage:
    repository: matrixinfer/runtime
    tag: 1.0.0
  downloader:
    # accessKey is the access key for the downloader.
    accessKey: ""
    # secretKey is the secret key for the downloader.
    secretKey: ""

webhook:
  enabled: true
  # replicas is the number of registry-webhook instances to run.
  replicas: 1
  image:
    # repository is the container image repository for the registry-webhook.
    repository: ghcr.io/matrixinfer-ai/registry-webhook
    # tag is the container image tag for the registry-webhook.
    tag: latest
    # pullPolicy is the image pull policy for the registry-webhook.
    pullPolicy: IfNotPresent
    # args are the command line arguments for the registry-webhook.
    args: [ "--port=8443", "--webhook-timeout=30" ]
  # resource defines the resource limits and requests for the registry-webhook.
  resource:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
