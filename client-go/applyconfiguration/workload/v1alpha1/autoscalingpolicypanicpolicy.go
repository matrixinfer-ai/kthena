/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// AutoscalingPolicyPanicPolicyApplyConfiguration represents a declarative configuration of the AutoscalingPolicyPanicPolicy type for use
// with apply.
type AutoscalingPolicyPanicPolicyApplyConfiguration struct {
	Percent               *int32       `json:"percent,omitempty"`
	Period                *v1.Duration `json:"period,omitempty"`
	PanicThresholdPercent *int32       `json:"panicThresholdPercent,omitempty"`
	PanicModeHold         *v1.Duration `json:"panicModeHold,omitempty"`
}

// AutoscalingPolicyPanicPolicyApplyConfiguration constructs a declarative configuration of the AutoscalingPolicyPanicPolicy type for use with
// apply.
func AutoscalingPolicyPanicPolicy() *AutoscalingPolicyPanicPolicyApplyConfiguration {
	return &AutoscalingPolicyPanicPolicyApplyConfiguration{}
}

// WithPercent sets the Percent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Percent field is set to the value of the last call.
func (b *AutoscalingPolicyPanicPolicyApplyConfiguration) WithPercent(value int32) *AutoscalingPolicyPanicPolicyApplyConfiguration {
	b.Percent = &value
	return b
}

// WithPeriod sets the Period field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Period field is set to the value of the last call.
func (b *AutoscalingPolicyPanicPolicyApplyConfiguration) WithPeriod(value v1.Duration) *AutoscalingPolicyPanicPolicyApplyConfiguration {
	b.Period = &value
	return b
}

// WithPanicThresholdPercent sets the PanicThresholdPercent field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PanicThresholdPercent field is set to the value of the last call.
func (b *AutoscalingPolicyPanicPolicyApplyConfiguration) WithPanicThresholdPercent(value int32) *AutoscalingPolicyPanicPolicyApplyConfiguration {
	b.PanicThresholdPercent = &value
	return b
}

// WithPanicModeHold sets the PanicModeHold field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PanicModeHold field is set to the value of the last call.
func (b *AutoscalingPolicyPanicPolicyApplyConfiguration) WithPanicModeHold(value v1.Duration) *AutoscalingPolicyPanicPolicyApplyConfiguration {
	b.PanicModeHold = &value
	return b
}
