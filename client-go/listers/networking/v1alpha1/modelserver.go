/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	networkingv1alpha1 "github.com/volcano-sh/kthena/pkg/apis/networking/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ModelServerLister helps list ModelServers.
// All objects returned here must be treated as read-only.
type ModelServerLister interface {
	// List lists all ModelServers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1alpha1.ModelServer, err error)
	// ModelServers returns an object that can list and get ModelServers.
	ModelServers(namespace string) ModelServerNamespaceLister
	ModelServerListerExpansion
}

// modelServerLister implements the ModelServerLister interface.
type modelServerLister struct {
	listers.ResourceIndexer[*networkingv1alpha1.ModelServer]
}

// NewModelServerLister returns a new ModelServerLister.
func NewModelServerLister(indexer cache.Indexer) ModelServerLister {
	return &modelServerLister{listers.New[*networkingv1alpha1.ModelServer](indexer, networkingv1alpha1.Resource("modelserver"))}
}

// ModelServers returns an object that can list and get ModelServers.
func (s *modelServerLister) ModelServers(namespace string) ModelServerNamespaceLister {
	return modelServerNamespaceLister{listers.NewNamespaced[*networkingv1alpha1.ModelServer](s.ResourceIndexer, namespace)}
}

// ModelServerNamespaceLister helps list and get ModelServers.
// All objects returned here must be treated as read-only.
type ModelServerNamespaceLister interface {
	// List lists all ModelServers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1alpha1.ModelServer, err error)
	// Get retrieves the ModelServer from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*networkingv1alpha1.ModelServer, error)
	ModelServerNamespaceListerExpansion
}

// modelServerNamespaceLister implements the ModelServerNamespaceLister
// interface.
type modelServerNamespaceLister struct {
	listers.ResourceIndexer[*networkingv1alpha1.ModelServer]
}
