/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	networkingv1alpha1 "github.com/volcano-sh/kthena/pkg/apis/networking/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ModelRouteLister helps list ModelRoutes.
// All objects returned here must be treated as read-only.
type ModelRouteLister interface {
	// List lists all ModelRoutes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1alpha1.ModelRoute, err error)
	// ModelRoutes returns an object that can list and get ModelRoutes.
	ModelRoutes(namespace string) ModelRouteNamespaceLister
	ModelRouteListerExpansion
}

// modelRouteLister implements the ModelRouteLister interface.
type modelRouteLister struct {
	listers.ResourceIndexer[*networkingv1alpha1.ModelRoute]
}

// NewModelRouteLister returns a new ModelRouteLister.
func NewModelRouteLister(indexer cache.Indexer) ModelRouteLister {
	return &modelRouteLister{listers.New[*networkingv1alpha1.ModelRoute](indexer, networkingv1alpha1.Resource("modelroute"))}
}

// ModelRoutes returns an object that can list and get ModelRoutes.
func (s *modelRouteLister) ModelRoutes(namespace string) ModelRouteNamespaceLister {
	return modelRouteNamespaceLister{listers.NewNamespaced[*networkingv1alpha1.ModelRoute](s.ResourceIndexer, namespace)}
}

// ModelRouteNamespaceLister helps list and get ModelRoutes.
// All objects returned here must be treated as read-only.
type ModelRouteNamespaceLister interface {
	// List lists all ModelRoutes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*networkingv1alpha1.ModelRoute, err error)
	// Get retrieves the ModelRoute from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*networkingv1alpha1.ModelRoute, error)
	ModelRouteNamespaceListerExpansion
}

// modelRouteNamespaceLister implements the ModelRouteNamespaceLister
// interface.
type modelRouteNamespaceLister struct {
	listers.ResourceIndexer[*networkingv1alpha1.ModelRoute]
}
