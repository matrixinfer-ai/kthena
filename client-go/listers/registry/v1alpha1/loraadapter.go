/*
Copyright MatrixInfer-AI Authors.

  Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
	registryv1alpha1 "matrixinfer.ai/matrixinfer/pkg/apis/registry/v1alpha1"
)

// LoraAdapterLister helps list LoraAdapters.
// All objects returned here must be treated as read-only.
type LoraAdapterLister interface {
	// List lists all LoraAdapters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*registryv1alpha1.LoraAdapter, err error)
	// LoraAdapters returns an object that can list and get LoraAdapters.
	LoraAdapters(namespace string) LoraAdapterNamespaceLister
	LoraAdapterListerExpansion
}

// loraAdapterLister implements the LoraAdapterLister interface.
type loraAdapterLister struct {
	listers.ResourceIndexer[*registryv1alpha1.LoraAdapter]
}

// NewLoraAdapterLister returns a new LoraAdapterLister.
func NewLoraAdapterLister(indexer cache.Indexer) LoraAdapterLister {
	return &loraAdapterLister{listers.New[*registryv1alpha1.LoraAdapter](indexer, registryv1alpha1.Resource("loraadapter"))}
}

// LoraAdapters returns an object that can list and get LoraAdapters.
func (s *loraAdapterLister) LoraAdapters(namespace string) LoraAdapterNamespaceLister {
	return loraAdapterNamespaceLister{listers.NewNamespaced[*registryv1alpha1.LoraAdapter](s.ResourceIndexer, namespace)}
}

// LoraAdapterNamespaceLister helps list and get LoraAdapters.
// All objects returned here must be treated as read-only.
type LoraAdapterNamespaceLister interface {
	// List lists all LoraAdapters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*registryv1alpha1.LoraAdapter, err error)
	// Get retrieves the LoraAdapter from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*registryv1alpha1.LoraAdapter, error)
	LoraAdapterNamespaceListerExpansion
}

// loraAdapterNamespaceLister implements the LoraAdapterNamespaceLister
// interface.
type loraAdapterNamespaceLister struct {
	listers.ResourceIndexer[*registryv1alpha1.LoraAdapter]
}
