/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	workloadv1alpha1 "github.com/volcano-sh/kthena/pkg/apis/workload/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ModelServingLister helps list ModelServings.
// All objects returned here must be treated as read-only.
type ModelServingLister interface {
	// List lists all ModelServings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*workloadv1alpha1.ModelServing, err error)
	// ModelServings returns an object that can list and get ModelServings.
	ModelServings(namespace string) ModelServingNamespaceLister
	ModelServingListerExpansion
}

// modelServingLister implements the ModelServingLister interface.
type modelServingLister struct {
	listers.ResourceIndexer[*workloadv1alpha1.ModelServing]
}

// NewModelServingLister returns a new ModelServingLister.
func NewModelServingLister(indexer cache.Indexer) ModelServingLister {
	return &modelServingLister{listers.New[*workloadv1alpha1.ModelServing](indexer, workloadv1alpha1.Resource("modelserving"))}
}

// ModelServings returns an object that can list and get ModelServings.
func (s *modelServingLister) ModelServings(namespace string) ModelServingNamespaceLister {
	return modelServingNamespaceLister{listers.NewNamespaced[*workloadv1alpha1.ModelServing](s.ResourceIndexer, namespace)}
}

// ModelServingNamespaceLister helps list and get ModelServings.
// All objects returned here must be treated as read-only.
type ModelServingNamespaceLister interface {
	// List lists all ModelServings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*workloadv1alpha1.ModelServing, err error)
	// Get retrieves the ModelServing from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*workloadv1alpha1.ModelServing, error)
	ModelServingNamespaceListerExpansion
}

// modelServingNamespaceLister implements the ModelServingNamespaceLister
// interface.
type modelServingNamespaceLister struct {
	listers.ResourceIndexer[*workloadv1alpha1.ModelServing]
}
