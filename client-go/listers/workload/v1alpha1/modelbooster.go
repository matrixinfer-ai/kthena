/*
Copyright The Volcano Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	workloadv1alpha1 "github.com/volcano-sh/kthena/pkg/apis/workload/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ModelBoosterLister helps list ModelBoosters.
// All objects returned here must be treated as read-only.
type ModelBoosterLister interface {
	// List lists all ModelBoosters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*workloadv1alpha1.ModelBooster, err error)
	// ModelBoosters returns an object that can list and get ModelBoosters.
	ModelBoosters(namespace string) ModelBoosterNamespaceLister
	ModelBoosterListerExpansion
}

// modelBoosterLister implements the ModelBoosterLister interface.
type modelBoosterLister struct {
	listers.ResourceIndexer[*workloadv1alpha1.ModelBooster]
}

// NewModelBoosterLister returns a new ModelBoosterLister.
func NewModelBoosterLister(indexer cache.Indexer) ModelBoosterLister {
	return &modelBoosterLister{listers.New[*workloadv1alpha1.ModelBooster](indexer, workloadv1alpha1.Resource("modelbooster"))}
}

// ModelBoosters returns an object that can list and get ModelBoosters.
func (s *modelBoosterLister) ModelBoosters(namespace string) ModelBoosterNamespaceLister {
	return modelBoosterNamespaceLister{listers.NewNamespaced[*workloadv1alpha1.ModelBooster](s.ResourceIndexer, namespace)}
}

// ModelBoosterNamespaceLister helps list and get ModelBoosters.
// All objects returned here must be treated as read-only.
type ModelBoosterNamespaceLister interface {
	// List lists all ModelBoosters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*workloadv1alpha1.ModelBooster, err error)
	// Get retrieves the ModelBooster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*workloadv1alpha1.ModelBooster, error)
	ModelBoosterNamespaceListerExpansion
}

// modelBoosterNamespaceLister implements the ModelBoosterNamespaceLister
// interface.
type modelBoosterNamespaceLister struct {
	listers.ResourceIndexer[*workloadv1alpha1.ModelBooster]
}
